import React, { useEffect, useState } from "react";
import fondo from "../../assets/fondo.jpg";

const API_KEY = "AIzaSyAFCH91yCt97McpYHsf_NFfl1MY8CySme4"; // <-- Reemplaza esto con tu API key

const Principal = () => {
  const [videos, setVideos] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");
  const [favorites, setFavorites] = useState([]);
  const [favoriteSearch, setFavoriteSearch] = useState("");

  const buscarVideos = async () => {
    if (!searchTerm) return;
    const response = await fetch(
      `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(
        searchTerm
      )}&type=video&key=${API_KEY}&maxResults=10`
    );
    const data = await response.json();
    if (data.items) {
      setVideos(data.items);
    }
  };

  const toggleFavorite = (video) => {
    const exists = favorites.find((f) => f.id.videoId === video.id.videoId);
    if (exists) {
      setFavorites(favorites.filter((f) => f.id.videoId !== video.id.videoId));
    } else {
      setFavorites([...favorites, video]);
    }
  };

  const isFavorite = (videoId) =>
    favorites.some((v) => v.id.videoId === videoId);

  const filteredFavorites = favorites.filter((video) =>
    video.snippet.title.toLowerCase().includes(favoriteSearch.toLowerCase())
  );

  return (
    <div
      className="min-h-screen bg-gray-100 blur:md"
      style={{ backgroundImage: `url(${fondo})`, backgroundSize: "cover" }}
    >
      <header className="bg-white shadow p-4 flex justify-between items-center">
        <span className="text-lg font-semibold">InnovaTube</span>
        <div>
          <span className="text-gray-700">
            Bienvenido, "{localStorage.getItem("userdata")}"
          </span>
          <button className="ml-4 bg-red-600 text-white px-4 py-2 rounded hover:bg-red-800 transition">
            Cerrar sesión
          </button>
        </div>
      </header>

      <main className="p-4 grid grid-cols-1 md:grid-cols-2 gap-4">
        {/* Listado de videos */}
        <section className="bg-white p-4 rounded shadow">
          <h2 className="text-xl font-semibold mb-2">Buscar videos</h2>
          <div className="flex mb-4">
            <input
              type="text"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              placeholder="Buscar..."
              className="w-full p-2 border border-gray-300 rounded-l"
            />
            <button
              onClick={buscarVideos}
              className="bg-blue-500 text-white px-4 py-2 rounded-r hover:bg-blue-700"
            >
              Buscar
            </button>
          </div>

          <ul className="space-y-2 max-h-[400px] overflow-y-auto">
            {videos.map((video) => (
              <li
                key={video.id.videoId}
                className="flex items-center p-2 border rounded space-x-2"
              >
                <img
                  src={video.snippet.thumbnails.medium.url}
                  alt={video.snippet.title}
                  className="w-24 h-16 object-cover rounded"
                />
                <div className="flex-1">
                  <p className="text-sm font-semibold truncate">
                    {video.snippet.title}
                  </p>
                </div>
                <button
                  onClick={() => toggleFavorite(video)}
                  className={`${
                    isFavorite(video.id.videoId)
                      ? "text-yellow-500"
                      : "text-blue-500"
                  } hover:underline`}
                >
                  {isFavorite(video.id.videoId) ? "★ Quitar" : "☆ Favorito"}
                </button>
              </li>
            ))}
          </ul>
        </section>

        {/* Listado de favoritos */}
        <section className="bg-white p-4 rounded shadow">
          <h2 className="text-xl font-semibold mb-2">Favoritos</h2>
          <input
            type="text"
            placeholder="Buscar en favoritos..."
            value={favoriteSearch}
            onChange={(e) => setFavoriteSearch(e.target.value)}
            className="w-full p-2 border border-gray-300 rounded mb-4"
          />

          <ul className="space-y-2 max-h-[400px] overflow-y-auto">
            {filteredFavorites.map((video) => (
              <li
                key={video.id.videoId}
                className="flex justify-between items-center p-2 border rounded"
              >
                <span className="truncate w-4/5">{video.snippet.title}</span>
                <button
                  onClick={() => toggleFavorite(video)}
                  className="text-red-500 hover:underline"
                >
                  ❌ Quitar
                </button>
              </li>
            ))}
          </ul>
        </section>
      </main>
    </div>
  );
};

export default Principal;
